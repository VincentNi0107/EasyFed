ResNet(
  (conv1): SlimmableConv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (layer1): ModuleList(
    (0): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (layer2): ModuleList(
    (0): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): SlimmableConv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
    )
    (1): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (layer3): ModuleList(
    (0): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): SlimmableConv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
    )
    (1): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (layer4): ModuleList(
    (0): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (shortcut): SlimmableConv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
    )
    (1): Block(
      (n1): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (n2): SwitchableBatchNorm2d(
        (bn): ModuleList(
          (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (conv1): SlimmableConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv2): SlimmableConv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (n4): SwitchableBatchNorm2d(
    (bn): ModuleList(
      (0): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (linear): SlimmableLinear(in_features=512, out_features=10, bias=True)
  




conv1.weight torch.Size([64, 3, 3, 3])
layer1.0.n1.bn.0.weight torch.Size([16])
layer1.0.n1.bn.0.bias torch.Size([16])
layer1.0.n1.bn.0.running_mean torch.Size([16])
layer1.0.n1.bn.0.running_var torch.Size([16])
layer1.0.n1.bn.0.num_batches_tracked torch.Size([])
layer1.0.n1.bn.1.weight torch.Size([32])
layer1.0.n1.bn.1.bias torch.Size([32])
layer1.0.n1.bn.1.running_mean torch.Size([32])
layer1.0.n1.bn.1.running_var torch.Size([32])
layer1.0.n1.bn.1.num_batches_tracked torch.Size([])
layer1.0.n1.bn.2.weight torch.Size([48])
layer1.0.n1.bn.2.bias torch.Size([48])
layer1.0.n1.bn.2.running_mean torch.Size([48])
layer1.0.n1.bn.2.running_var torch.Size([48])
layer1.0.n1.bn.2.num_batches_tracked torch.Size([])
layer1.0.n1.bn.3.weight torch.Size([64])
layer1.0.n1.bn.3.bias torch.Size([64])
layer1.0.n1.bn.3.running_mean torch.Size([64])
layer1.0.n1.bn.3.running_var torch.Size([64])
layer1.0.n1.bn.3.num_batches_tracked torch.Size([])
layer1.0.n2.bn.0.weight torch.Size([16])
layer1.0.n2.bn.0.bias torch.Size([16])
layer1.0.n2.bn.0.running_mean torch.Size([16])
layer1.0.n2.bn.0.running_var torch.Size([16])
layer1.0.n2.bn.0.num_batches_tracked torch.Size([])
layer1.0.n2.bn.1.weight torch.Size([32])
layer1.0.n2.bn.1.bias torch.Size([32])
layer1.0.n2.bn.1.running_mean torch.Size([32])
layer1.0.n2.bn.1.running_var torch.Size([32])
layer1.0.n2.bn.1.num_batches_tracked torch.Size([])
layer1.0.n2.bn.2.weight torch.Size([48])
layer1.0.n2.bn.2.bias torch.Size([48])
layer1.0.n2.bn.2.running_mean torch.Size([48])
layer1.0.n2.bn.2.running_var torch.Size([48])
layer1.0.n2.bn.2.num_batches_tracked torch.Size([])
layer1.0.n2.bn.3.weight torch.Size([64])
layer1.0.n2.bn.3.bias torch.Size([64])
layer1.0.n2.bn.3.running_mean torch.Size([64])
layer1.0.n2.bn.3.running_var torch.Size([64])
layer1.0.n2.bn.3.num_batches_tracked torch.Size([])
layer1.0.conv1.weight torch.Size([64, 64, 3, 3])
layer1.0.conv2.weight torch.Size([64, 64, 3, 3])
layer1.1.n1.bn.0.weight torch.Size([16])
layer1.1.n1.bn.0.bias torch.Size([16])
layer1.1.n1.bn.0.running_mean torch.Size([16])
layer1.1.n1.bn.0.running_var torch.Size([16])
layer1.1.n1.bn.0.num_batches_tracked torch.Size([])
layer1.1.n1.bn.1.weight torch.Size([32])
layer1.1.n1.bn.1.bias torch.Size([32])
layer1.1.n1.bn.1.running_mean torch.Size([32])
layer1.1.n1.bn.1.running_var torch.Size([32])
layer1.1.n1.bn.1.num_batches_tracked torch.Size([])
layer1.1.n1.bn.2.weight torch.Size([48])
layer1.1.n1.bn.2.bias torch.Size([48])
layer1.1.n1.bn.2.running_mean torch.Size([48])
layer1.1.n1.bn.2.running_var torch.Size([48])
layer1.1.n1.bn.2.num_batches_tracked torch.Size([])
layer1.1.n1.bn.3.weight torch.Size([64])
layer1.1.n1.bn.3.bias torch.Size([64])
layer1.1.n1.bn.3.running_mean torch.Size([64])
layer1.1.n1.bn.3.running_var torch.Size([64])
layer1.1.n1.bn.3.num_batches_tracked torch.Size([])
layer1.1.n2.bn.0.weight torch.Size([16])
layer1.1.n2.bn.0.bias torch.Size([16])
layer1.1.n2.bn.0.running_mean torch.Size([16])
layer1.1.n2.bn.0.running_var torch.Size([16])
layer1.1.n2.bn.0.num_batches_tracked torch.Size([])
layer1.1.n2.bn.1.weight torch.Size([32])
layer1.1.n2.bn.1.bias torch.Size([32])
layer1.1.n2.bn.1.running_mean torch.Size([32])
layer1.1.n2.bn.1.running_var torch.Size([32])
layer1.1.n2.bn.1.num_batches_tracked torch.Size([])
layer1.1.n2.bn.2.weight torch.Size([48])
layer1.1.n2.bn.2.bias torch.Size([48])
layer1.1.n2.bn.2.running_mean torch.Size([48])
layer1.1.n2.bn.2.running_var torch.Size([48])
layer1.1.n2.bn.2.num_batches_tracked torch.Size([])
layer1.1.n2.bn.3.weight torch.Size([64])
layer1.1.n2.bn.3.bias torch.Size([64])
layer1.1.n2.bn.3.running_mean torch.Size([64])
layer1.1.n2.bn.3.running_var torch.Size([64])
layer1.1.n2.bn.3.num_batches_tracked torch.Size([])
layer1.1.conv1.weight torch.Size([64, 64, 3, 3])
layer1.1.conv2.weight torch.Size([64, 64, 3, 3])
layer2.0.n1.bn.0.weight torch.Size([16])
layer2.0.n1.bn.0.bias torch.Size([16])
layer2.0.n1.bn.0.running_mean torch.Size([16])
layer2.0.n1.bn.0.running_var torch.Size([16])
layer2.0.n1.bn.0.num_batches_tracked torch.Size([])
layer2.0.n1.bn.1.weight torch.Size([32])
layer2.0.n1.bn.1.bias torch.Size([32])
layer2.0.n1.bn.1.running_mean torch.Size([32])
layer2.0.n1.bn.1.running_var torch.Size([32])
layer2.0.n1.bn.1.num_batches_tracked torch.Size([])
layer2.0.n1.bn.2.weight torch.Size([48])
layer2.0.n1.bn.2.bias torch.Size([48])
layer2.0.n1.bn.2.running_mean torch.Size([48])
layer2.0.n1.bn.2.running_var torch.Size([48])
layer2.0.n1.bn.2.num_batches_tracked torch.Size([])
layer2.0.n1.bn.3.weight torch.Size([64])
layer2.0.n1.bn.3.bias torch.Size([64])
layer2.0.n1.bn.3.running_mean torch.Size([64])
layer2.0.n1.bn.3.running_var torch.Size([64])
layer2.0.n1.bn.3.num_batches_tracked torch.Size([])
layer2.0.n2.bn.0.weight torch.Size([32])
layer2.0.n2.bn.0.bias torch.Size([32])
layer2.0.n2.bn.0.running_mean torch.Size([32])
layer2.0.n2.bn.0.running_var torch.Size([32])
layer2.0.n2.bn.0.num_batches_tracked torch.Size([])
layer2.0.n2.bn.1.weight torch.Size([64])
layer2.0.n2.bn.1.bias torch.Size([64])
layer2.0.n2.bn.1.running_mean torch.Size([64])
layer2.0.n2.bn.1.running_var torch.Size([64])
layer2.0.n2.bn.1.num_batches_tracked torch.Size([])
layer2.0.n2.bn.2.weight torch.Size([96])
layer2.0.n2.bn.2.bias torch.Size([96])
layer2.0.n2.bn.2.running_mean torch.Size([96])
layer2.0.n2.bn.2.running_var torch.Size([96])
layer2.0.n2.bn.2.num_batches_tracked torch.Size([])
layer2.0.n2.bn.3.weight torch.Size([128])
layer2.0.n2.bn.3.bias torch.Size([128])
layer2.0.n2.bn.3.running_mean torch.Size([128])
layer2.0.n2.bn.3.running_var torch.Size([128])
layer2.0.n2.bn.3.num_batches_tracked torch.Size([])
layer2.0.conv1.weight torch.Size([128, 64, 3, 3])
layer2.0.conv2.weight torch.Size([128, 128, 3, 3])
layer2.0.shortcut.weight torch.Size([128, 64, 1, 1])
layer2.1.n1.bn.0.weight torch.Size([32])
layer2.1.n1.bn.0.bias torch.Size([32])
layer2.1.n1.bn.0.running_mean torch.Size([32])
layer2.1.n1.bn.0.running_var torch.Size([32])
layer2.1.n1.bn.0.num_batches_tracked torch.Size([])
layer2.1.n1.bn.1.weight torch.Size([64])
layer2.1.n1.bn.1.bias torch.Size([64])
layer2.1.n1.bn.1.running_mean torch.Size([64])
layer2.1.n1.bn.1.running_var torch.Size([64])
layer2.1.n1.bn.1.num_batches_tracked torch.Size([])
layer2.1.n1.bn.2.weight torch.Size([96])
layer2.1.n1.bn.2.bias torch.Size([96])
layer2.1.n1.bn.2.running_mean torch.Size([96])
layer2.1.n1.bn.2.running_var torch.Size([96])
layer2.1.n1.bn.2.num_batches_tracked torch.Size([])
layer2.1.n1.bn.3.weight torch.Size([128])
layer2.1.n1.bn.3.bias torch.Size([128])
layer2.1.n1.bn.3.running_mean torch.Size([128])
layer2.1.n1.bn.3.running_var torch.Size([128])
layer2.1.n1.bn.3.num_batches_tracked torch.Size([])
layer2.1.n2.bn.0.weight torch.Size([32])
layer2.1.n2.bn.0.bias torch.Size([32])
layer2.1.n2.bn.0.running_mean torch.Size([32])
layer2.1.n2.bn.0.running_var torch.Size([32])
layer2.1.n2.bn.0.num_batches_tracked torch.Size([])
layer2.1.n2.bn.1.weight torch.Size([64])
layer2.1.n2.bn.1.bias torch.Size([64])
layer2.1.n2.bn.1.running_mean torch.Size([64])
layer2.1.n2.bn.1.running_var torch.Size([64])
layer2.1.n2.bn.1.num_batches_tracked torch.Size([])
layer2.1.n2.bn.2.weight torch.Size([96])
layer2.1.n2.bn.2.bias torch.Size([96])
layer2.1.n2.bn.2.running_mean torch.Size([96])
layer2.1.n2.bn.2.running_var torch.Size([96])
layer2.1.n2.bn.2.num_batches_tracked torch.Size([])
layer2.1.n2.bn.3.weight torch.Size([128])
layer2.1.n2.bn.3.bias torch.Size([128])
layer2.1.n2.bn.3.running_mean torch.Size([128])
layer2.1.n2.bn.3.running_var torch.Size([128])
layer2.1.n2.bn.3.num_batches_tracked torch.Size([])
layer2.1.conv1.weight torch.Size([128, 128, 3, 3])
layer2.1.conv2.weight torch.Size([128, 128, 3, 3])
layer3.0.n1.bn.0.weight torch.Size([32])
layer3.0.n1.bn.0.bias torch.Size([32])
layer3.0.n1.bn.0.running_mean torch.Size([32])
layer3.0.n1.bn.0.running_var torch.Size([32])
layer3.0.n1.bn.0.num_batches_tracked torch.Size([])
layer3.0.n1.bn.1.weight torch.Size([64])
layer3.0.n1.bn.1.bias torch.Size([64])
layer3.0.n1.bn.1.running_mean torch.Size([64])
layer3.0.n1.bn.1.running_var torch.Size([64])
layer3.0.n1.bn.1.num_batches_tracked torch.Size([])
layer3.0.n1.bn.2.weight torch.Size([96])
layer3.0.n1.bn.2.bias torch.Size([96])
layer3.0.n1.bn.2.running_mean torch.Size([96])
layer3.0.n1.bn.2.running_var torch.Size([96])
layer3.0.n1.bn.2.num_batches_tracked torch.Size([])
layer3.0.n1.bn.3.weight torch.Size([128])
layer3.0.n1.bn.3.bias torch.Size([128])
layer3.0.n1.bn.3.running_mean torch.Size([128])
layer3.0.n1.bn.3.running_var torch.Size([128])
layer3.0.n1.bn.3.num_batches_tracked torch.Size([])
layer3.0.n2.bn.0.weight torch.Size([64])
layer3.0.n2.bn.0.bias torch.Size([64])
layer3.0.n2.bn.0.running_mean torch.Size([64])
layer3.0.n2.bn.0.running_var torch.Size([64])
layer3.0.n2.bn.0.num_batches_tracked torch.Size([])
layer3.0.n2.bn.1.weight torch.Size([128])
layer3.0.n2.bn.1.bias torch.Size([128])
layer3.0.n2.bn.1.running_mean torch.Size([128])
layer3.0.n2.bn.1.running_var torch.Size([128])
layer3.0.n2.bn.1.num_batches_tracked torch.Size([])
layer3.0.n2.bn.2.weight torch.Size([192])
layer3.0.n2.bn.2.bias torch.Size([192])
layer3.0.n2.bn.2.running_mean torch.Size([192])
layer3.0.n2.bn.2.running_var torch.Size([192])
layer3.0.n2.bn.2.num_batches_tracked torch.Size([])
layer3.0.n2.bn.3.weight torch.Size([256])
layer3.0.n2.bn.3.bias torch.Size([256])
layer3.0.n2.bn.3.running_mean torch.Size([256])
layer3.0.n2.bn.3.running_var torch.Size([256])
layer3.0.n2.bn.3.num_batches_tracked torch.Size([])
layer3.0.conv1.weight torch.Size([256, 128, 3, 3])
layer3.0.conv2.weight torch.Size([256, 256, 3, 3])
layer3.0.shortcut.weight torch.Size([256, 128, 1, 1])
layer3.1.n1.bn.0.weight torch.Size([64])
layer3.1.n1.bn.0.bias torch.Size([64])
layer3.1.n1.bn.0.running_mean torch.Size([64])
layer3.1.n1.bn.0.running_var torch.Size([64])
layer3.1.n1.bn.0.num_batches_tracked torch.Size([])
layer3.1.n1.bn.1.weight torch.Size([128])
layer3.1.n1.bn.1.bias torch.Size([128])
layer3.1.n1.bn.1.running_mean torch.Size([128])
layer3.1.n1.bn.1.running_var torch.Size([128])
layer3.1.n1.bn.1.num_batches_tracked torch.Size([])
layer3.1.n1.bn.2.weight torch.Size([192])
layer3.1.n1.bn.2.bias torch.Size([192])
layer3.1.n1.bn.2.running_mean torch.Size([192])
layer3.1.n1.bn.2.running_var torch.Size([192])
layer3.1.n1.bn.2.num_batches_tracked torch.Size([])
layer3.1.n1.bn.3.weight torch.Size([256])
layer3.1.n1.bn.3.bias torch.Size([256])
layer3.1.n1.bn.3.running_mean torch.Size([256])
layer3.1.n1.bn.3.running_var torch.Size([256])
layer3.1.n1.bn.3.num_batches_tracked torch.Size([])
layer3.1.n2.bn.0.weight torch.Size([64])
layer3.1.n2.bn.0.bias torch.Size([64])
layer3.1.n2.bn.0.running_mean torch.Size([64])
layer3.1.n2.bn.0.running_var torch.Size([64])
layer3.1.n2.bn.0.num_batches_tracked torch.Size([])
layer3.1.n2.bn.1.weight torch.Size([128])
layer3.1.n2.bn.1.bias torch.Size([128])
layer3.1.n2.bn.1.running_mean torch.Size([128])
layer3.1.n2.bn.1.running_var torch.Size([128])
layer3.1.n2.bn.1.num_batches_tracked torch.Size([])
layer3.1.n2.bn.2.weight torch.Size([192])
layer3.1.n2.bn.2.bias torch.Size([192])
layer3.1.n2.bn.2.running_mean torch.Size([192])
layer3.1.n2.bn.2.running_var torch.Size([192])
layer3.1.n2.bn.2.num_batches_tracked torch.Size([])
layer3.1.n2.bn.3.weight torch.Size([256])
layer3.1.n2.bn.3.bias torch.Size([256])
layer3.1.n2.bn.3.running_mean torch.Size([256])
layer3.1.n2.bn.3.running_var torch.Size([256])
layer3.1.n2.bn.3.num_batches_tracked torch.Size([])
layer3.1.conv1.weight torch.Size([256, 256, 3, 3])
layer3.1.conv2.weight torch.Size([256, 256, 3, 3])
layer4.0.n1.bn.0.weight torch.Size([64])
layer4.0.n1.bn.0.bias torch.Size([64])
layer4.0.n1.bn.0.running_mean torch.Size([64])
layer4.0.n1.bn.0.running_var torch.Size([64])
layer4.0.n1.bn.0.num_batches_tracked torch.Size([])
layer4.0.n1.bn.1.weight torch.Size([128])
layer4.0.n1.bn.1.bias torch.Size([128])
layer4.0.n1.bn.1.running_mean torch.Size([128])
layer4.0.n1.bn.1.running_var torch.Size([128])
layer4.0.n1.bn.1.num_batches_tracked torch.Size([])
layer4.0.n1.bn.2.weight torch.Size([192])
layer4.0.n1.bn.2.bias torch.Size([192])
layer4.0.n1.bn.2.running_mean torch.Size([192])
layer4.0.n1.bn.2.running_var torch.Size([192])
layer4.0.n1.bn.2.num_batches_tracked torch.Size([])
layer4.0.n1.bn.3.weight torch.Size([256])
layer4.0.n1.bn.3.bias torch.Size([256])
layer4.0.n1.bn.3.running_mean torch.Size([256])
layer4.0.n1.bn.3.running_var torch.Size([256])
layer4.0.n1.bn.3.num_batches_tracked torch.Size([])
layer4.0.n2.bn.0.weight torch.Size([128])
layer4.0.n2.bn.0.bias torch.Size([128])
layer4.0.n2.bn.0.running_mean torch.Size([128])
layer4.0.n2.bn.0.running_var torch.Size([128])
layer4.0.n2.bn.0.num_batches_tracked torch.Size([])
layer4.0.n2.bn.1.weight torch.Size([256])
layer4.0.n2.bn.1.bias torch.Size([256])
layer4.0.n2.bn.1.running_mean torch.Size([256])
layer4.0.n2.bn.1.running_var torch.Size([256])
layer4.0.n2.bn.1.num_batches_tracked torch.Size([])
layer4.0.n2.bn.2.weight torch.Size([384])
layer4.0.n2.bn.2.bias torch.Size([384])
layer4.0.n2.bn.2.running_mean torch.Size([384])
layer4.0.n2.bn.2.running_var torch.Size([384])
layer4.0.n2.bn.2.num_batches_tracked torch.Size([])
layer4.0.n2.bn.3.weight torch.Size([512])
layer4.0.n2.bn.3.bias torch.Size([512])
layer4.0.n2.bn.3.running_mean torch.Size([512])
layer4.0.n2.bn.3.running_var torch.Size([512])
layer4.0.n2.bn.3.num_batches_tracked torch.Size([])
layer4.0.conv1.weight torch.Size([512, 256, 3, 3])
layer4.0.conv2.weight torch.Size([512, 512, 3, 3])
layer4.0.shortcut.weight torch.Size([512, 256, 1, 1])
layer4.1.n1.bn.0.weight torch.Size([128])
layer4.1.n1.bn.0.bias torch.Size([128])
layer4.1.n1.bn.0.running_mean torch.Size([128])
layer4.1.n1.bn.0.running_var torch.Size([128])
layer4.1.n1.bn.0.num_batches_tracked torch.Size([])
layer4.1.n1.bn.1.weight torch.Size([256])
layer4.1.n1.bn.1.bias torch.Size([256])
layer4.1.n1.bn.1.running_mean torch.Size([256])
layer4.1.n1.bn.1.running_var torch.Size([256])
layer4.1.n1.bn.1.num_batches_tracked torch.Size([])
layer4.1.n1.bn.2.weight torch.Size([384])
layer4.1.n1.bn.2.bias torch.Size([384])
layer4.1.n1.bn.2.running_mean torch.Size([384])
layer4.1.n1.bn.2.running_var torch.Size([384])
layer4.1.n1.bn.2.num_batches_tracked torch.Size([])
layer4.1.n1.bn.3.weight torch.Size([512])
layer4.1.n1.bn.3.bias torch.Size([512])
layer4.1.n1.bn.3.running_mean torch.Size([512])
layer4.1.n1.bn.3.running_var torch.Size([512])
layer4.1.n1.bn.3.num_batches_tracked torch.Size([])
layer4.1.n2.bn.0.weight torch.Size([128])
layer4.1.n2.bn.0.bias torch.Size([128])
layer4.1.n2.bn.0.running_mean torch.Size([128])
layer4.1.n2.bn.0.running_var torch.Size([128])
layer4.1.n2.bn.0.num_batches_tracked torch.Size([])
layer4.1.n2.bn.1.weight torch.Size([256])
layer4.1.n2.bn.1.bias torch.Size([256])
layer4.1.n2.bn.1.running_mean torch.Size([256])
layer4.1.n2.bn.1.running_var torch.Size([256])
layer4.1.n2.bn.1.num_batches_tracked torch.Size([])
layer4.1.n2.bn.2.weight torch.Size([384])
layer4.1.n2.bn.2.bias torch.Size([384])
layer4.1.n2.bn.2.running_mean torch.Size([384])
layer4.1.n2.bn.2.running_var torch.Size([384])
layer4.1.n2.bn.2.num_batches_tracked torch.Size([])
layer4.1.n2.bn.3.weight torch.Size([512])
layer4.1.n2.bn.3.bias torch.Size([512])
layer4.1.n2.bn.3.running_mean torch.Size([512])
layer4.1.n2.bn.3.running_var torch.Size([512])
layer4.1.n2.bn.3.num_batches_tracked torch.Size([])
layer4.1.conv1.weight torch.Size([512, 512, 3, 3])
layer4.1.conv2.weight torch.Size([512, 512, 3, 3])
n4.bn.0.weight torch.Size([128])
n4.bn.0.bias torch.Size([128])
n4.bn.0.running_mean torch.Size([128])
n4.bn.0.running_var torch.Size([128])
n4.bn.0.num_batches_tracked torch.Size([])
n4.bn.1.weight torch.Size([256])
n4.bn.1.bias torch.Size([256])
n4.bn.1.running_mean torch.Size([256])
n4.bn.1.running_var torch.Size([256])
n4.bn.1.num_batches_tracked torch.Size([])
n4.bn.2.weight torch.Size([384])
n4.bn.2.bias torch.Size([384])
n4.bn.2.running_mean torch.Size([384])
n4.bn.2.running_var torch.Size([384])
n4.bn.2.num_batches_tracked torch.Size([])
n4.bn.3.weight torch.Size([512])
n4.bn.3.bias torch.Size([512])
n4.bn.3.running_mean torch.Size([512])
n4.bn.3.running_var torch.Size([512])
n4.bn.3.num_batches_tracked torch.Size([])
linear.weight torch.Size([10, 512])
linear.bias torch.Size([10])